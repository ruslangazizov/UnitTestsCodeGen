// Auto-Generated by UnitTestsCodeGen

import Foundation
#if os(iOS) || os(tvOS) || os(watchOS)
import UIKit
#elseif os(OSX)
import AppKit
#endif
import XCTest
import A
import B
@testable import B
@testable import C
@testable import D

final class PresenterTests: XCTestCase {
    
    // System under test
    private var sut: Presenter!
    // Dependencies
    private var viewModelsFactory: IViewModelsFactoryMock!
    
    override func setUp() {
        super.setUp()
        viewModelsFactory = IViewModelsFactoryMock()
        sut = Presenter(viewModelsFactory: viewModelsFactory)
    }
    
    override func tearDown() {
        super.tearDown()
        sut = nil
        viewModelsFactory = nil
    }
    
    // MARK: - Tests
    
    func test_someMethodInExtensionInAnotherFile() throws {
        // given
        let someArg: String = <#String#>
        let expectedResult: Int = <#Int#>
        
        // when
        let result = sut.someMethodInExtensionInAnotherFile(someArg)
        
        // then
        XCTAssertEqual(result, expectedResult)
    }
    
    func test_view() throws {
        // given
        let expectedResult: IViewController? = <#IViewController?#>
        
        // when
        let result = sut.view
        
        // then
        XCTAssertEqual(result, expectedResult)
    }
    
    func test_dataSource() throws {
        // given
        let expectedResult: [String] = <#[String]#>
        
        // when
        let result = sut.dataSource
        
        // then
        XCTAssertEqual(result, expectedResult)
    }
    
    func test_viewDidLoad() throws {
        // given
        
        
        // when
        sut.viewDidLoad()
        
        // then
        
    }
    
    func test_viewDidAppear() throws {
        // given
        let expectedResult: Bool = <#Bool#>
        
        // when
        let result = sut.viewDidAppear()
        
        // then
        XCTAssertEqual(result, expectedResult)
    }
    
    func test_someMethodInExtension() throws {
        // given
        
        
        // when
        sut.someMethodInExtension()
        
        // then
        
    }
}